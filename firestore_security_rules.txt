// Firestore Security Rules for Call Invitations
// Add these rules to your Firestore database rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Existing rules for other collections...
    
    // Call invitations rules
    match /call_invitations/{invitationId} {
      // Allow read if user is sender or receiver
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.fromId || 
                   request.auth.uid == resource.data.toId);
      
      // Allow write if user is the sender (creating invitation)
      allow create: if request.auth != null && 
                    request.auth.uid == request.resource.data.fromId &&
                    // Validate required fields
                    request.resource.data.keys().hasAll(['id', 'callId', 'fromId', 'fromName', 'toId', 'toName', 'type', 'status', 'createdAt']) &&
                    request.resource.data.status == 'pending' &&
                    request.resource.data.type in ['voice', 'video'];
      
      // Allow update if user is sender (cancel) or receiver (accept/decline)
      allow update: if request.auth != null && 
                    (
                      // Sender can cancel
                      (request.auth.uid == resource.data.fromId && 
                       request.resource.data.status == 'cancelled') ||
                      // Receiver can accept or decline
                      (request.auth.uid == resource.data.toId && 
                       request.resource.data.status in ['accepted', 'declined'])
                    ) &&
                    // Ensure only status can be changed during updates
                    request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']);
      
      // No deletes allowed - keep records for audit
      allow delete: if false;
    }
    
    // Users collection (if not already defined)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users' basic info for calls
    }
  }
}

// Instructions for applying these rules:
// 1. Go to Firebase Console > Firestore Database > Rules
// 2. Add the call_invitations section to your existing rules
// 3. Make sure users collection allows reading other users' basic info
// 4. Test the rules in the Firebase Console simulator before publishing